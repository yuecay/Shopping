<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neuedu.dao.ProductKillOrderMapper">
  <resultMap id="BaseResultMap" type="com.neuedu.pojo.ProductKillOrder">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="product_id" jdbcType="INTEGER" property="productId" />
    <result column="product_kill_id" jdbcType="INTEGER" property="productKillId" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from product_kill_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.neuedu.pojo.ProductKillOrder">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into product_kill_order (id, product_id, product_kill_id, 
      order_no, user_id, status, 
      create_time, update_time)
    values (#{id,jdbcType=INTEGER}, #{productId,jdbcType=INTEGER}, #{productKillId,jdbcType=INTEGER}, 
      #{orderNo,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, 
      now(), now())
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.neuedu.pojo.ProductKillOrder">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update product_kill_order
    set product_id = #{productId,jdbcType=INTEGER},
      product_kill_id = #{productKillId,jdbcType=INTEGER},
      order_no = #{orderNo,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, product_id, product_kill_id, order_no, user_id, status, create_time, update_time
    from product_kill_order
    where id = #{id,jdbcType=INTEGER}
  </select>


  <select id="selectByOrderNo" parameterType="string" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, product_id, product_kill_id, order_no, user_id, status, create_time, update_time
    from product_kill_order
    where order_no = #{orderNo}
  </select>

  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, product_id, product_kill_id, order_no, user_id, status, create_time, update_time
    from product_kill_order
  </select>

  <!--失效更新订单信息-->
  <update id="expireOrder">
    UPDATE product_kill_order
    SET status = #{status}
    WHERE order_no = #{orderNo} AND status = 10
  </update>

  <!--根据秒杀成功后的订单编码查询-->
  <select id="selectByCode" resultType="com.neuedu.vo.KillSuccessUserInfo">
     SELECT a.*,c.username,c.phone,c.email,b.`name` AS productName
      FROM product_kill_order a

      LEFT JOIN neuedu_product  b
      on a.product_id = b.id
      LEFT JOIN neuedu_user c
      ON a.user_id = c.id
      LEFT JOIN product_kill d
      ON a.product_kill_id = d.id
      where a.order_no = #{orderNo}
      and d.is_active =1
  </select>


  <!--根据秒杀活动跟用户Id查询用户的抢购数量-->
  <select id="countByKillUserId" resultType="java.lang.Integer">
    SELECT
    COUNT(1) AS total
    FROM
    product_kill_order
    WHERE
    user_id = #{userId}
    AND product_kill_id = #{productKillId}
    <!-- AND `status` IN (-1, 0) -->
    AND `status` IN (10)
  </select>

</mapper>